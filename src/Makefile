#=============================================================================#
# Makefile for Rocks'n'Diamonds                                               #
# (c) 1995-2000 Holger Schemel, info@artsoft.org                              #
#=============================================================================#

.EXPORT_ALL_VARIABLES:

ifndef PLATFORM			# platform not specified -- try auto detection
ifdef COMSPEC
PLATFORM = msdos
else
PLATFORM = unix
endif
endif

ifdef X11_PATH			# path to X11 specified by top level Makefile
XINC_PATH = $(X11_PATH)/include
XLIB_PATH = $(X11_PATH)/lib
X11_INCL = -I$(XINC_PATH)
X11_LIBS = -L$(XLIB_PATH)
endif

AR = ar
RANLIB = ranlib

ifeq ($(PLATFORM),msdos)	# MS-DOS native compiling

RM = del
PROGNAME = ../rocks.exe

SYS_CFLAGS = -DTARGET_X11
SYS_LDFLAGS = -s -lalleg

else				# Unix or cross-compiling for MS-DOS and Win32

RM = rm -f
PROGNAME = ../rocksndiamonds

ifeq ($(PLATFORM),solaris)
EXTRA_LDFLAGS = -lnsl -lsocket -R$(XLIB_PATH)
PLATFORM = unix
endif

ifeq ($(PLATFORM),unix)
PROFILING = -pg
endif

ifeq ($(PLATFORM),cross-msdos)
PROGNAME = ../rocks.exe
TARGET = allegro
endif

ifeq ($(PLATFORM),cross-win32)
PROGNAME = ../rocksndiamonds.exe
TARGET = sdl
endif

ifeq ($(TARGET),x11)
SYS_CFLAGS  = -DTARGET_X11 $(X11_INCL)
SYS_LDFLAGS = $(X11_LIBS) -lX11
endif

ifeq ($(TARGET),sdl)
SYS_CFLAGS  = -DTARGET_SDL $(shell sdl-config --cflags)
SYS_LDFLAGS = -lSDL_image -lSDL_mixer $(shell sdl-config --libs)
endif

ifeq ($(TARGET),allegro)
SYS_CFLAGS = -DTARGET_X11 -I$(CROSS_PATH_MSDOS)/include
SYS_LDFLAGS = -lalleg
endif

endif				# (PLATFORM != msdos)


ifdef RO_GAME_DIR		# path to read-only game data specified
CONFIG_RO_GAME_DIR = -DRO_GAME_DIR="\"$(RO_GAME_DIR)\""
endif

ifdef RW_GAME_DIR		# path to writable game data specified
CONFIG_RW_GAME_DIR = -DRW_GAME_DIR="\"$(RW_GAME_DIR)\""
endif

ifdef SCORE_ENTRIES		# number of score entries per player specified
CONFIG_SCORE_ENTRIES = -D$(SCORE_ENTRIES)
endif

CONFIG_GAME_DIR = $(CONFIG_RO_GAME_DIR) $(CONFIG_RW_GAME_DIR)


CONFIG = $(CONFIG_GAME_DIR) $(CONFIG_SCORE_ENTRIES) $(JOYSTICK)
DEBUG = -DDEBUG -g

OPTIONS = $(DEBUG) -Wall			# only for debugging purposes
# OPTIONS = $(DEBUG) -O3 -Wall			# only for debugging purposes
# OPTIONS = $(DEBUG) -Wall -ansi -pedantic	# only for debugging purposes
# OPTIONS = -O3 -Wall -ansi -pedantic
# OPTIONS = -O3 -Wall
# OPTIONS = -O3
# OPTIONS = -DSYSV -Ae				# may be needed for HP-UX

CFLAGS = $(OPTIONS) $(SYS_CFLAGS) $(CONFIG)
LDFLAGS = $(SYS_LDFLAGS) $(EXTRA_LDFLAGS) -lm


SRCS =	main.c		\
	init.c		\
	events.c	\
	tools.c		\
	screens.c	\
	game.c		\
	editor.c	\
	files.c		\
	tape.c		\
	joystick.c	\
	cartoons.c	\
	network.c	\
	netserv.c

OBJS =	main.o		\
	init.o		\
	events.o	\
	tools.o		\
	screens.o	\
	game.o		\
	editor.o	\
	files.o		\
	tape.o		\
	joystick.o	\
	cartoons.o	\
	network.o	\
	netserv.o

LIBDIR = libgame
LIBGAME = $(LIBDIR)/libgame.a


all: $(PROGNAME)

$(PROGNAME): $(LIBGAME) $(OBJS)
	$(CC) $(PROFILING) $(OBJS) $(LIBGAME) $(LDFLAGS) -o $(PROGNAME)

$(LIBGAME):
	$(MAKE) -C $(LIBDIR)

.c.o:
	$(CC) $(PROFILING) $(CFLAGS) -c $*.c

clean:
	$(MAKE) -C $(LIBDIR) clean
	$(RM) $(OBJS)
	$(RM) $(LIBGAME)
	$(RM) $(PROGNAME)
	$(RM) ../*.exe


#-----------------------------------------------------------------------------#
# development only stuff                                                      #
#-----------------------------------------------------------------------------#

depend:
	$(MAKE) -C $(LIBDIR) depend
	for i in $(SRCS); do $(CPP) $(CFLAGS) -M $$i; done > .depend

ifeq (.depend,$(wildcard .depend))
include .depend
endif
